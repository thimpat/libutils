var p=(t,r,e)=>new Promise((o,n)=>{var s=i=>{try{l(e.next(i))}catch(u){n(u)}},c=i=>{try{l(e.throw(i))}catch(u){n(u)}},l=i=>i.done?o(i.value):Promise.resolve(i.value).then(s,c);l((e=e.apply(t,r)).next())});import f from"path";import y from"fs";import m from"https";import x from"crypto";function O(t){return new Promise(r=>{setTimeout(r,t)})}function d(t){if(t){if(Array.isArray(t))return!1}else return!1;return typeof t=="object"}function h(t,...r){if(!r.length)return t;let e=r.shift();if(d(t)&&d(e))for(let o in e)d(e[o])?(t[o]||Object.assign(t,{[o]:{}}),h(t[o],e[o])):Object.assign(t,{[o]:e[o]});return h(t,...r)}function T(t="",r=""){return t+x.randomBytes(16).toString("base64").replace(/[^\w\d]/g,"")+r}var g=(t,r=void 0)=>{let o={port:"port",protocol:"protocol",timeout:"timeout",host:"host",defaultPage:"defaultpage",silent:()=>["--silent"],staticDirs:s=>{let c=[];return s.forEach(l=>{c.push("--dir"),c.push(l)}),c},enableapi:s=>s?[]:["--disableapi"]}[t];return o?typeof o=="function"?o(r):[`--${o}`,r]:[]},F=(t,r,{scriptPath:e="",command:o="",target:n=""}={})=>{let s=r.slice(0,1);if(e){if(!y.existsSync(e))throw new Error(`[${e}] could not be found`);s.push(e)}o&&(s.push(o),n&&s.push(n));for(let[c,l]of Object.entries(t)){let i=g(c,l);!i||!i.length||s.push(...i)}return s},a=t=>(t=f.normalize(t),t=t.replace(/\\/g,"/"),t),P=t=>{try{return t?(t=t.trim().toLowerCase(),t):""}catch(r){console.error(r)}},z=(...t)=>{let r=f.join(...t);return r=a(r),r},E=t=>(t=f.resolve(t),t=a(t),t),I=(t,r=[])=>{if(!t)return!1;if(!Array.isArray(r))throw new Error("list should be an array");return!r||!r.length?!1:r.includes(t)},L=t=>y.statSync(t).size,k=({protocol:t,host:r,port:e,pathname:o})=>{let n=new URL("http://localhost");return n.protocol=t,n.host=r,n.port=e,o&&(n.pathname=o),n.toString()},B=function(t){t||console.log({lid:2e3,target:"void"},t)},b=t=>t?t.charAt(t.length-1)==="/":!1,C=(t,r)=>{t=a(t),r=a(r),b(t)||(t=f.parse(t).dir+"/");let e=f.relative(t,r);return a(e)},D=function(t,r=!1){return p(this,null,function*(){return new Promise(function(e,o){return p(this,null,function*(){try{m.get(t,n=>{let s="";n.on("data",c=>{s+=c}),n.on("end",()=>{s=r?JSON.parse(s):s,e(s)})}).on("error",n=>{console.log(n.message)})}catch(n){o(n)}})})})};function N(t,r="word"){if(r==="verb")return t===1?"s":"";if(r==="word")return t===1?"":"s"}export{N as addPlural,C as calculateRelativePath,g as convertSessionKeyNameToArg,F as convertSessionToArg,k as convertToUrl,B as doNothing,D as fetchSync,T as generateTempName,L as getFilesizeInBytes,I as isItemInList,d as isObject,z as joinPath,h as mergeDeep,P as normaliseFileName,a as normalisePath,E as resolvePath,O as sleep};
